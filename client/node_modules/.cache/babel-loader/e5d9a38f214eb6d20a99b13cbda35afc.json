{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oksana Miller\\\\repos\\\\tigerkata\\\\client\\\\src\\\\components\\\\javascript\\\\ContactForm.js\";\nimport React from \"react\";\nimport \"../css/ContactForm.css\";\nimport { Button, FormGroup, FormControl, FormText, FormCheck } from \"react-bootstrap\";\nexport default class ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const {\n      status\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Contactform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      action: \"https://formspree.io/mvowdrvq\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"subject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, \"Subject\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      value: this.state.subject,\n      onChange: this.onChangeSubject,\n      name: \"subject\",\n      id: \"subexample\",\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      value: this.state.message,\n      onChange: this.onChangeMessage,\n      rows: \"9\",\n      cols: \"50\",\n      name: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    })), status === \"SUCCESS\" ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, \"Thanks!\") : /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 50\n      }\n    }, \"Submit\"), status === \"ERROR\" && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }\n    }, \"Ooops! There was an error.\")));\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({\n          status: \"SUCCESS\"\n        });\n      } else {\n        this.setState({\n          status: \"ERROR\"\n        });\n      }\n    };\n\n    xhr.send(data);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Oksana Miller/repos/tigerkata/client/src/components/javascript/ContactForm.js"],"names":["React","Button","FormGroup","FormControl","FormText","FormCheck","ContactForm","Component","constructor","props","submitForm","bind","state","status","render","email","onChangeEmail","subject","onChangeSubject","message","onChangeMessage","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../css/ContactForm.css\";\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    FormControl,\r\n    FormText,\r\n    FormCheck,\r\n  } from \"react-bootstrap\";\r\n\r\nexport default class ContactForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.state = {\r\n      status: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n    return (\r\n        <div id =\"Contactform\">\r\n      <form\r\n        onSubmit={this.submitForm}\r\n        action=\"https://formspree.io/mvowdrvq\"\r\n        method=\"POST\"\r\n      >\r\n        \r\n        <FormGroup row>\r\n                  <Label for=\"email\">Email</Label>\r\n                  {/* <Col sm={10}> */}\r\n                    <Input type=\"email\"  value={this.state.email}\r\n                    onChange={this.onChangeEmail}  name=\"email\" id=\"exampleEmail\" placeholder=\"\" />\r\n                  {/* </Col> */}\r\n                </FormGroup>\r\n                 <FormGroup row>\r\n                  <Label for=\"subject\">Subject</Label>\r\n                  {/* <Col sm={10}> */}\r\n                    <Input type=\"text\" value={this.state.subject}\r\n                    onChange={this.onChangeSubject} name=\"subject\" id=\"subexample\" placeholder=\"\" />\r\n                  {/* </Col> */}\r\n                </FormGroup>\r\n                <FormGroup controlId=\"exampleForm.ControlTextarea1\">\r\n                <Label for =\"message\">Message</Label>\r\n                <Input type=\"textarea\"  value={this.state.message}\r\n                    onChange={this.onChangeMessage}rows=\"9\" cols =\"50\" name =\"message\" />\r\n                </FormGroup>\r\n        {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>Submit</button>}\r\n        {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  submitForm(ev) {\r\n    ev.preventDefault();\r\n    const form = ev.target;\r\n    const data = new FormData(form);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(form.method, form.action);\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n      if (xhr.status === 200) {\r\n        form.reset();\r\n        this.setState({ status: \"SUCCESS\" });\r\n      } else {\r\n        this.setState({ status: \"ERROR\" });\r\n      }\r\n    };\r\n    xhr.send(data);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}